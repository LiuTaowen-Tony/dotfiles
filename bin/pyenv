#! /bin/bash

if [ -z "$VENV_DIR" ]; then
    echo "VENV_DIR not defined"
    exit 1
fi

if [ -f .venv ]; then
    echo ".venv exists"
    exit 1
fi

if [ ! -d "$VENV_DIR" ]; then
    echo "$VENV_DIR is not a valid directory"
    exit 1
fi

CUR_DIR=$(pwd)
BASE_NAME=$(basename "$CUR_DIR")

create () {
    RANDOM_NAME=$(random_name)

    ACTUAL_VENV_DIR="${VENV_DIR}/${RANDOM_NAME}${BASE_NAME}/${BASE_NAME}"
    mkdir -p "$ACTUAL_VENV_DIR"
    echo "$ACTUAL_VENV_DIR"

    LINK_BACK="${VENV_DIR}/${RANDOM_NAME}${BASE_NAME}/link_back.txt"
    touch "$LINK_BACK"

    echo "${CUR_DIR}" >> "${LINK_BACK}"
    python3 -m venv "$ACTUAL_VENV_DIR"
    ln -s "$ACTUAL_VENV_DIR" "$CUR_DIR/.venv"

    if [ ! -d ".git" ]; then
      echo "init git"
      git init
      init_gitignore
    fi
}

remove_unused_venvs () {
    for LINE in $(ls ${VENV_DIR}); do
        PROJ_DIR=$(tail -n 1 "${VENV_DIR}/${LINE}/link_back.txt")
        if [ ! -d "${PROJ_DIR}" ]; then
            echo "please remove: ${VENV_DIR}/${LINE}"
            exit 0
        fi
        PROJ_VENV=$(readlink "${PROJ_DIR}/.venv")
        PROJ_VENV_PARENT=$(dirname "${PROJ_VENV}")
        if [[ "$PROJ_VENV_PARENT" != "${VENV_DIR}/${LINE}" ]] ; then
            echo "please remove: ${VENV_DIR}/${LINE}"
        fi
    done
}

create
remove_unused_venvs


