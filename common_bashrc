#!/bin/bash

export PATH="$HOME/dotfiles/bin:$PATH"

source "$HOME/dotfiles/export_build"

current_shell=$(ps -p $$ -ocomm=)
export MAKE='make -j16'

git_info() {
    branch=$(git branch 2>/dev/null | grep '*' | sed 's/* //')
    if [ -n "$branch" ] ; then
        if git diff-index --quiet HEAD --; then
            echo " ($branch)"
        else
            echo " ($branch)⚠️ "
        fi
    fi

}

capture_execution_time() {
    local exit_status=$? # Capture the exit status of the last command
   # if [[ $last_command_duration != "" ]]; then
   #     #echo -e "${last_command_duration}"
   # fi
}

PROMPT_COMMAND='
start_time=$SECONDS
if [[ -n $last_command_start ]]; then
    last_command_duration=$(( SECONDS - last_command_start ))
else
    last_command_duration=""
fi
last_command_start=$start_time
'


############################## SHELL SPECIFIC ##############################
if [[ $current_shell == *"bash"* ]] ; then # BASH SPECIFIC
  PS1='$(if [ $? -ne 0 ]; then echo -e "\[\033[31m\]→"; else echo -e "\[\033[32m\]→"; fi)\[\033[0m\]$(capture_execution_time) \[\033[32m\]\h \[\033[1;34m\]\W\[\033[0m\]$(git_info) '
elif [[ $current_shell == *"zsh"* ]] ; then # ZSH SPECIFIC
  setopt CORRECT
  setopt CORRECT_ALL
  setopt NO_CASE_GLOB
  setopt SHARE_HISTORY # share history across multiple zsh sessions
  setopt APPEND_HISTORY # append to history
  setopt HIST_EXPIRE_DUPS_FIRST # expire duplicates first
  setopt HIST_IGNORE_DUPS # do not store duplications
  setopt HIST_FIND_NO_DUPS #ignore duplicates when searching
  setopt HIST_REDUCE_BLANKS # removes blank lines from history
  HISTFILE="${HOME}/.zsh_history"
  HISTSIZE=2000
  SAVEHIST=5000
  autoload -Uz compinit && compinit 
  precmd() {
    # Determine if the last command succeeded or failed
    if [ $? -ne 0 ]; then
      arrow_color="%F{red}"
    else
      arrow_color="%F{green}"
    fi
    start_time=$SECONDS
    if [[ -n $last_command_start ]]; then
        last_command_duration=$(( SECONDS - last_command_start ))
    else
        last_command_duration=""
    fi
    last_command_start=$start_time

    # Build the prompt
    PROMPT="${arrow_color}→%f$(capture_execution_time) %F{green}%m %F{blue}%B%~%b%f$(git_info) %f"
  }
fi
############################## SHELL SPECIFIC END ##############################

############################## OS SPECIFIC ##############################
if [ $(uname) = "Darwin" ] ; then
  export CLICOLOR=1
  export LSCOLORS=ExGxBxDxCxEgEdxbxgxcxd
fi
############################## OS SPECIFIC END ##############################

ncolors=$(tput colors)
if [ -n "$ncolors" ] && [ $ncolors -ge 8 ]; then
  alias grep='grep --color=auto'
  alias diff='diff --color=auto'
  alias ip='ip -color=auto'
  alias git='git -c color.ui=auto'
  alias json='jq .'
  alias dir='dir --color=auto'
fi

source $HOME/dotfiles/common_aliases

if [[ $- == *i* ]] ; then
  on_login
fi



